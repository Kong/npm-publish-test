name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  remove-prev-comments:
    name: Remove PR preview comments
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 20
    steps:
      - name: Remove preview consumption comment
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2.9.4
        with:
          header: pr_preview_consumption
          delete: true
          GITHUB_TOKEN: ${{ secrets.SPEC_RENDERER_BOT_PAT }}

  run-tests:
    name: Tests
    uses: ./.github/workflows/test.yaml

  publish-preview:
    name: Publish Preview
    runs-on: ubuntu-latest
    needs: [run-tests]
    if: github.event_name == 'pull_request'
    timeout-minutes: 20
    steps:

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.SPEC_RENDERER_BOT_PAT }}
          fetch-depth: 0

      - name: Setup PNPM with Dependencies
        uses: ./.github/actions/setup-pnpm-with-dependencies/

      - name: Download Build Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: spec-renderer-build-output-artifact
          path: ./dist

      - name: Setup git
        run: |
          git config --global user.email "konnectx-engineers+kongponents-bot@konghq.com"
          git config --global user.name 'kong-bot'

      - name: Publish Package Preview
        id: package-preview
        # Do not run for `alpha` or `beta` branches
        if: github.event_name == 'pull_request' && (github.actor != 'renovate[bot]' || contains(github.event.pull_request.labels.*.name, 'create preview package')) && !contains(github.head_ref || github.ref_name, 'alpha') && !contains(github.head_ref || github.ref_name, 'beta')
        run: |

          preid="pr.${{ github.event.pull_request.number }}.$(git rev-parse --short ${{ github.event.pull_request.head.sha }})"
          tag="pr-${{ github.event.pull_request.number }}"
          echo "preid=${preid}"

          # Use yarn to bump the version for the prerelease
          pnpm version prerelease --preid ${preid} --no-git-tag-version --yes --amend

          package_version=$(jq -r ".version" package.json)
          package=@kong/spec-renderer@"${package_version}"

          npm show "${package}" >/dev/null 2>&1 && npm_show_status=0 || npm_show_status=1
          if [ $npm_show_status -eq 0 ]; then
            echo "Package ${package} is already published. Skipping publishing."
            exit 0
          fi

          npm_instructions=""

          pkg=$(pnpm publish --no-git-checks --access public --report-summary --tag "${tag}" | grep "+ "| sed 's/+ //')

          if [[ -z "${pkg}" ]]; then
            echo "Error publishing package"
            exit -1
          fi

          npm_instructions="@$(echo ${pkg}|cut -d'@' -f2)@${tag}"

          echo "npm_instructions<<EOF" >> $GITHUB_OUTPUT
          echo -e "$npm_instructions" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Provide preview link info
        if: ${{ steps.package-preview.outputs.npm_instructions != '' }}
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2.9.4
        with:
          header: pr_preview_consumption
          message: |
             ### Install the preview package from this PR

             ```sh
             ${{ steps.package-preview.outputs.npm_instructions }}
             ```
          GITHUB_TOKEN: ${{ secrets.SPEC_RENDERER_BOT_PAT }}

  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [run-tests]
    if: github.event_name == 'push'
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.SPEC_RENDERER_BOT_PAT }}
          fetch-depth: 0

      - name: Setup PNPM with Dependencies
        uses: ./.github/actions/setup-pnpm-with-dependencies/

      - name: Setup git
        run: |
          git config --global user.email "konnectx-engineers+kongponents-bot@konghq.com"
          git config --global user.name 'kong-bot'

      - name: Download Build Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: spec-renderer-build-output-artifact
          path: ./dist

      - name: Semantic Release
        if: github.event_name == 'push'
        id: semantic_release
        uses: cycjimmy/semantic-release-action@16ca923e6ccbb50770c415a0ccd43709a8c5f7a4 # v4.2.2
        env:
          # Since branch protections are on (pushing commits) you need to use a bot PAT
          GITHUB_TOKEN: ${{ secrets.SPEC_RENDERER_BOT_PAT }}

        # as of now cycjimmy/semantic-release-action is not publishing  to npmjs as
        # trusted publishing is not yet supported, so we want to do a publish as separate step
      - name: Publish to npm
        if: github.event_name == 'push' && steps.semantic_release.outputs.new_release_published == 'true'
        run: |
          echo "published: ${{steps.semantic_release.outputs.new_release_published }}"
          npm publish
